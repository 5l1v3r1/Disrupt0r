#!/usr/bin/env python2

import sys
import socket
import threading

timeout = 3

def date_time():
    return datetime.datetime.now().strftime("%h:%m:%s")

def tcp_scan(target, port):

    try:
        conn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        conn.settimeout(timeout)
        
        ret             = conn.connect_ex((target, port))
        
        if (ret==0):
            if VERBOSE:
                print "[%s] %d/tcp open" % (date_time(), port)
            open_ports.append(port)
        
    except socket.timeout:
        ports_filtered.append(port)


def parse_ports(arg):

    ports = []

    if "-" in arg:
        try:
            start,end = arg.split("-")
            start = int(start)
            end = int(end)
            if (start < 65535) and (end < 65535):
                for p in range(start,end+1):
                    ports.append(p)
            else:
                print "Ports cannot be higher than 65535"
                sys.exit(1)
        except:
            print "Error with port specification. e.g. (0-1000)"
            sys.exit(1)

    elif "," in arg:
        try:
            for p in args.split(","):
                if (int(p) < 65535):
                    ports.append(int(p))
                else:
                    print "Ports cannot be higher than 65535"
                    sys.exit(1)
        except:
            print "Error with port specification. e.g. (22,23,25)"
            sys.exit(1)

    else:
        try:
            if (int(arg) < 65535):
                ports.append(int(arg))
            else:
                print "Ports cannot be higher than 65535"
                sys.exit(1)
        except:
                print "Error with port specified. See help."
                sys.exit(1)

    return ports

def parse_target(args):
    return args

def usage():
    
    print "Usage: %s -t [targets] -p [ports] [options]" % sys.argv[0]
    print ""
    print "Options:"
    print ""
    print "\t-t [target ip]"
    print "\t-p [port] \t\t\te.g. ( -p 25 // -p 22,23,24,25 // -p 0-1024 )"
    print "\t-v \t\t\t\tVerbose output"
    print "\t--timeout [timeout in ms]"
    print ""

if __name__ == "__main__":

    if "-v" in sys.argv:
        VERBOSE = True

    if "-h" in sys.argv or "--help" in sys.argv:
        usage()
        sys.exit(0)

    if "--timeout" in sys.argv:
        try:
            timeout = float(sys.argv[sys.argv.index("--timeout")+1])
        except:
            print "Error with supplied timeout value"
            sys.exit(1)

    if "-t" not in sys.argv or "-p" not in sys.argv:
        usage()
        sys.exit(1)

    targets = parse_target(sys.argv[sys.argv.index("-t")+1])
    ports   = parse_ports(sys.argv[sys.argv.index("-p")+1])
    
    for p in ports:
        tcp_scan(targets, p)

